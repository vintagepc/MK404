# This is a basic workflow to help you get started with Actions

name: CI Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout ${{ github.event.pull_request.head.ref }}
      uses: actions/checkout@v2.2.0
      if: ${{ github.event.pull_request }}
      with:
        repository: vintagepc/MK3SIM.git
        ref: ${{ github.event.pull_request.head.ref }}
        submodules: true

    - name: Checkout master
      uses: actions/checkout@v2.2.0
      if: ${{ !github.event.pull_request }}
      with:
        repository: vintagepc/MK3SIM.git
        submodules: true

    - name: Cache packages
      uses: actions/cache@v1.0.3
      id: cache-pkgs
      with:
          path: "packages"
          key: ${{secrets.build_pkg_cache}}

    - name: Setup cache dir
      if:  ${{ ! steps.cache-valgrind.outputs.cache-hit }}
      run: mkdir -p packages/partial

    - name: Install packages
      run: sudo apt-get -o Dir::Cache::Archives=`pwd`/packages install libelf-dev gcc-avr libglew-dev freeglut3-dev libsdl-sound1.2-dev

    - name: Cache permissions
      run: sudo chmod -R 744 packages

    - name: Prepare CMake build
      run: mkdir ${{ runner.workspace }}/MK3SIM/build && cd ${{ runner.workspace }}/MK3SIM/build && cmake -DCMAKE_BUILD_TYPE=RELEASE ..

    - name: Build Einsy
      run: cd ${{ runner.workspace }}/MK3SIM/build && make

    - name: Regen docs
      if: ${{ github.event.pull_request }}
      run: cd ${{ runner.workspace }}/MK3SIM/build && make UpdateDocs
      
    - name: Check for changed docs
      if: ${{ github.event.pull_request }}
      run: |
          if output=$(git status --porcelain --untracked=no) && [ -n "$output" ]; then
          echo "::set-env name=needs_commit::1"
          fi

    - name: Push prep
      if: ${{env.needs_commit}}
      run: |
          cd ${{ runner.workspace }}/MK3SIM/
          git add ref/*
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Regen reference docs"

    - name: Push changes
      if:  ${{env.needs_commit}}
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ github.event.pull_request.head.ref }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Assemble artifacts
      if: ${{ !github.event.pull_request }}
      run: |
          cd ${{ runner.workspace }}/MK3SIM/build
          make Release_Package
    
    - name: Publish prerelease
      if: ${{ !github.event.pull_request }}
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "dev"
          prerelease: true
          title: "Latest (Development) Build"
          files: |
            ${{ runner.workspace }}/MK3SIM/build/MK404-development-build.tar.bz2
